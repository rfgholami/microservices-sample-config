server:
  port: 8765


eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

zuul:
  prefix: /api
  routes:
    second-saying-hello-service:
      path: /s1
      url: http://second-saying-hello-service
    call-hello-service:
      path: /s2
      url: http://call-hello-service
    saying-hello-service:
      path: /s3
      url: http://saying-hello-service

logging:
  level:
    ROOT: WARN
    se:
      callista: INFO
    org:
      springframework:
        web:
          filter:
          CommonsRequestLoggingFilter: DEBUG
        cloud:
          config:
            client:
              ConfigServicePropertySourceLocator: INFO
        retry:
          support:
            RetryTemplate: DEBUG
        boot:
          context:
            embedded:
              tomcat:
                TomcatEmbeddedServletContainer: INFO
              undertow:
                UndertowEmbeddedServletContainer: INFO

---

spring:
  profiles: docker

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
