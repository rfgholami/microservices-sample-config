server:
  port: 8765


eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5

hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 20
      execution:
        isolation:
          #          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 10000

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

zuul:
  ignoredServices: "*"
  routes:
    call-hello-service: /call/**
logging:
  level:
    ROOT: WARN
    se:
      callista: INFO
    org:
      springframework:
        web:
          filter:
          CommonsRequestLoggingFilter: DEBUG
        cloud:
          config:
            client:
              ConfigServicePropertySourceLocator: INFO
        retry:
          support:
            RetryTemplate: DEBUG
        boot:
          context:
            embedded:
              tomcat:
                TomcatEmbeddedServletContainer: INFO
              undertow:
                UndertowEmbeddedServletContainer: INFO

---

spring:
  profiles: docker

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
