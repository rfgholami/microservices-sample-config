eureka:
  client:
    serviceUrl:
      defaultZone: http://${registry.host:localhost}:${registry.port:8761}/eureka/

  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    hostname: localhost
    preferIpAddress: false


server:
  port: 9999

spring:
  security:
    user:
      password: password

security.oauth2.client:
  clientId: client
  clientSecret: secret
  authorized-grant-types: authorization_code,refresh_token,implicit,password,client_credentials
  scope: webshop

logging.level:
  root: WARN
  orgspringframework.security.oauth2: DEBUG
  org.springframework.security.oauth2.config.annotation.web.configurers.FrameworkEndpointHandlerMapping: INFO
  org.springframework.security.oauth2.provider.client.ClientCredentialsTokenGranter: DEBUG
  org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter: DEBUG
  org.springframework.security.oauth2.provider.code.AuthorizationCodeTokenGranter: DEBUG
  org.springframework.security.oauth2.provider.implicit.ImplicitTokenGranter: DEBUG
  org.springframework.security.oauth2.provider.approval.ApprovalStoreUserApprovalHandler: DEBUG
  org.springframework.security.oauth2.provider.endpoint.TokenEndpoint: INFO
  org.springframework.security.oauth2.provider.approval.AuthorizationEndpoint: INFO

  # Set INFO to see the allocated port
  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
  org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

  se.callista: INFO


---
spring:
  profiles: docker
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/